// Nebula UI / Lists
// -----------------
// Used in different places, like the Tree View, Commmand Palette etc.
// Overrides: atom/static/lists.less

// List Group

.list-group {
	.character-match {
		color: inherit;
		font-weight: inherit;
	}
	li {
		letter-spacing: 0.3px;
		padding-left: @component-padding/2;
		// We want to highlight the background of the list items because we dont know their size.
		&.selected {
			color: @text-color-selected;
			background-color: @background-color-selected;

			&:before {
				display: none;
			}
			.character-match {
				color: lighten(@blue, 14%);
				// border-bottom: 1px solid fade(@blue, 100%);
				text-shadow: 0 0 10px @blue;
			}
		}
	}
}
.command-palette {
	.list-group {
		.character-match {
			color: inherit;
			font-weight: inherit;
		}
	}
}

// List Tree -------------------

.list-group,
.list-tree {
	color: lighten(@text-color-subtle, 10%);
	atom-workspace[theme-nebula-ui-focusmode=enabled] & {
		color: @text-color-subtle;
	}

	li {
		.name {
			padding-right: 17px;
		}
		.transition();
	}

	// Colors the status of files
	.generate-list-item-text-color(@class) {
		li:not(.list-nested-item).text-@{class},
	    li.list-nested-item.text-@{class} > .list-item {
	      .text(@class);
	    }
	}
	.generate-list-item-text-color(subtle);
	.generate-list-item-text-color(info);
	.generate-list-item-text-color(success);
	.generate-list-item-text-color(warning);
	.generate-list-item-text-color(error);
	.generate-list-item-text-color(selected);

	.selected {
		color: @text-color-selected;
	}
}

// Select List -------------------
.select-list {
	li {
		padding: @component-padding/2 @component-padding;
		border-radius: 2px;
		color: lighten(desaturate(@base-background-color, 10%), 40%);
		transition: background-color 0.2s ease;;

		.secondary-line {
			opacity: 0.4;
		}
	}

	.status {
		float: right;
	}
}

// Popover List -------------------
// Used as a popover for something like autocomplete.

.select-list.popover-list {
	@popover-list-padding: @component-padding/2;
	padding: @popover-list-padding;
	border-radius: @component-border-radius;
	background-color: @overlay-background-color;
	// box-shadow: 0 2px 8px 1px hsla(0,0%,0%,.3);
	box-shadow: 0 15px 50px hsla(0, 0, 0, 0.2);

	// The explanation of the suggested snippet/value, usually with a link
	.suggestion-description {
		color: @text-color-selected;
		// background: none !important;
		opacity: 0.4;
		font-weight: 300;
		.transition(opacity);
	}
	&:hover {
		.suggestion-description {
			opacity: 1;
		}
	}

	.list-group {
		margin-top: @popover-list-padding;

		li {
			padding-left: @popover-list-padding;
		}
	}
}
autocomplete-suggestion-list {
	&.select-list.popover-list {
		ol.list-group {
			li {
				color: inherit;
				.word {
					.transition(color);
				}
				&.selected {
					.word {
						color: @text-color;
					}
					.character-match {
						color: lighten(@blue, 15%);
						text-shadow: 0 0 10px @blue;
					}
				}
			}
		}
	}
	.icon {
		&.snippet {
			color: @text-color-highlight;
			background: fade(@text-color-highlight, 10%);
		}
		&.attribute {
			color: @green;
			background: fade(@green, 10%);
		}
		&.variable {
			color: @orange;
			background: fade(@orange, 10%);
		}
		&.value {
			color: @purple;
			background: fade(@purple, 10%);
		}
		&.tag {
			color: @red;
			background: fade(@red, 10%);
		}
		&.property {
			color: @blue;
			background: fade(@blue, 10%);
		}
		&.selector {
			color: @green;
			background: fade(@green, 10%);
		}
	}
}
.fuzzy-finder {
	.list-group {
		li {
			.transition(color, background-color;);
			&.selected {
				.character-match {
					text-shadow: 0 0 10px @blue;
				}
			}
		}
		.character-match {
			color: inherit;
			font-weight: inherit;
			text-shadow: 0 0 10px @text-color-subtle;
		}
	}
}